package com.kkl.kklplus.golden.modules.api.controller;

import com.kkl.kklplus.common.exception.MSErrorCode;
import com.kkl.kklplus.common.response.MSResponse;
import com.kkl.kklplus.golden.modules.api.http.request.CommonParam;
import com.kkl.kklplus.golden.modules.api.http.command.OperationCommand;
import com.kkl.kklplus.golden.modules.api.http.request.BalanceParam;
import com.kkl.kklplus.golden.modules.api.http.request.CreateForBatchParam;
import com.kkl.kklplus.golden.modules.api.http.response.ResponseBody;
import com.kkl.kklplus.golden.modules.api.http.utils.OkHttpUtils;
import com.kkl.kklplus.golden.modules.api.utils.RestResult;
import com.kkl.kklplus.golden.modules.api.utils.RestResultGenerators;
import io.swagger.annotations.ApiOperation;
import org.apache.commons.lang3.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;


@RestController
@RequestMapping("/settlements/")
public class SettlementsController {


    @RequestMapping(value = "createForBatch", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public RestResult<Object> createForBatch(@RequestBody @Validated CreateForBatchParam createForBatchParam, BindingResult result) throws Exception {
        if (result.hasErrors()) {
            return RestResultGenerators.custom(99,"参数格式错误");
        }

        CommonParam commonParam = new CommonParam();
        commonParam.setRequestId("1238");
        commonParam.setTime(System.currentTimeMillis()/1000);
        //commonParam.setCallBackUrl(Constant.callbackUrl+"/api/callback/payment");
        OperationCommand command = OperationCommand.newInstance(OperationCommand.OperationCode.CREATEFORBATCH,createForBatchParam);
        ResponseBody<ResponseBody> resBody = OkHttpUtils.postSyncGenericNew(command, ResponseBody.class,commonParam);
        return RestResultGenerators.custom(0,resBody.getMsg(),resBody);
    }




    @RequestMapping(value = "refundBalance", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public RestResult<Object> refundBalance(@RequestBody BalanceParam balanceParam ) throws Exception {

        OperationCommand command = null;

        CommonParam commonParam = new CommonParam();
        commonParam.setRequestId("123");
        commonParam.setTime(System.currentTimeMillis()/1000);
        //commonParam.setCallBackUrl(Constant.callbackUrl+"/api/callback/refund");
        ResponseBody<ResponseBody> resBody = OkHttpUtils.postSyncGenericNew(command, ResponseBody.class,commonParam);

        return RestResultGenerators.custom(0,resBody.getMsg(),resBody.getData());
    }


    @ApiOperation("关闭退款")
    @PostMapping("closeRefund")
    public MSResponse closeRefund(@RequestBody BalanceParam balanceParam ) throws Exception {
        try {

        }catch (Exception e){

        }
        return null;
    }

}
