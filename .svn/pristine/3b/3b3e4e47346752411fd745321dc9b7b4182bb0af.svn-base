package com.kkl.kklplus.golden.modules.api.controller;

import com.alibaba.fastjson.JSON;

import com.alibaba.fastjson.JSONObject;
import com.kkl.kklplus.golden.modules.api.config.Constant;
import com.kkl.kklplus.golden.modules.api.config.HeadersShare;
import com.kkl.kklplus.golden.modules.api.entity.params.*;
import com.kkl.kklplus.golden.modules.api.http.request.BalanceParam;
import com.kkl.kklplus.golden.modules.api.http.request.CreateForBatchParam;
import com.kkl.kklplus.golden.modules.api.http.response.ResponseBody;
import com.kkl.kklplus.golden.modules.api.utils.*;

import com.kkl.kklplus.golden.modules.api.utils.common.OperationCommand;
import com.kkl.kklplus.golden.modules.api.utils.http.OkHttpUtils;
import org.springframework.http.HttpMethod;
import org.springframework.validation.BindingResult;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;


import java.math.BigDecimal;
import java.util.Map;


@RestController
@RequestMapping("/api/golden/")
public class GoldenController {

    @RequestMapping(value = "createForBatch", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public RestResult<Object> createForBatch(@RequestBody @Validated CreateForBatchParam createForBatchParam, BindingResult result) throws Exception {
        if (result.hasErrors()) {
            return RestResultGenerators.custom(99,"参数格式错误");
        }

        CommonParam commonParam = new CommonParam();
        commonParam.setRequestId("1238");
        commonParam.setTime(System.currentTimeMillis()/1000);
        commonParam.setCallBackUrl(Constant.callbackUrl+"/api/callback/payment");
        OperationCommand command = OperationCommand.newInstance(OperationCommand.OperationCode.CREATEFORBATCH,createForBatchParam);
        ResponseBody<ResponseBody> resBody = OkHttpUtils.postSyncGenericNew(command, ResponseBody.class,commonParam);
        return RestResultGenerators.custom(0,resBody.getMsg(),resBody);
    }




    @RequestMapping(value = "refundBalance", method = RequestMethod.POST, produces = "application/json;charset=UTF-8")
    public RestResult<Object> refundBalance(@RequestBody BalanceParam balanceParam ) throws Exception {

        OperationCommand command = null;

        CommonParam commonParam = new CommonParam();
        commonParam.setRequestId("123");
        commonParam.setTime(System.currentTimeMillis()/1000);
        commonParam.setCallBackUrl(Constant.callbackUrl+"/api/callback/refund");
        ResponseBody<ResponseBody> resBody = OkHttpUtils.postSyncGenericNew(command, ResponseBody.class,commonParam);

        return RestResultGenerators.custom(0,resBody.getMsg(),resBody.getData());
    }

}
